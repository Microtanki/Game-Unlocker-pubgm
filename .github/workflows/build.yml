name: Build Apk
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build

    - name: Build debug APK
      run: ./gradlew assembleDebug --stacktrace

    - name: Get App Version Name
      id: version
      run: echo "::set-output name=app_version::$(grep versionName app/build.gradle | sed -n 's/.*versionName \"\([0-9.]*\)\".*/\1/p')"

    - name: Rename APK
      run: mv app/build/outputs/apk/debug/app-debug.apk game-unlocker-v${{ steps.version.outputs.app_version }}.apk

    - name: Upload APK
      uses: actions/upload-artifact@v2
      with:
        name: Game Unlocker
        path: game-unlocker-v${{ steps.version.outputs.app_version }}.apk

    - name: Create Pre-Release
      id: create_release
      run: |
        tag_name=$(git rev-parse HEAD)
        release_description="Changelog: $(git log --oneline $tag_name...HEAD)"
        echo "Creating release with tag: $tag_name and description: $release_description"
        response=$(curl -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          -d '{
            "tag_name": "'"$tag_name"'",
            "name": "Release '"$tag_name"'",
            "body": "'"$release_description"'",
            "draft": false,
            "prerelease": true
          }' \
          "https://api.github.com/repos/${{ github.repository }}/releases")
        release_id=$(echo $response | jq -r .id)
        echo "::set-output name=release_id::$release_id"

    - name: Upload Release Assets
      run: |
        release_id=${{ steps.create_release.outputs.release_id }}
        asset_url=$(curl -X POST \
          -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Content-Type: application/octet-stream" \
          --data-binary "@game-unlocker-v${{ steps.version.outputs.app_version }}.apk" \
          "https://uploads.github.com/repos/${{ github.repository }}/releases/$release_id/assets?name=game-unlocker-v${{ steps.version.outputs.app_version }}.apk")
        echo "Uploaded asset: $asset_url"
